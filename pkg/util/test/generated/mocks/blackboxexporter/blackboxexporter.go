// Code generated by MockGen. DO NOT EDIT.
// Source: blackboxexporter.go

// Package blackboxexporter is a generated GoMock package.
package blackboxexporter

import (
	gomock "github.com/golang/mock/gomock"
	blackboxexporter "github.com/openshift/route-monitor-operator/pkg/consts/blackboxexporter"
	reflect "reflect"
)

// MockBlackBoxExporter is a mock of BlackBoxExporter interface
type MockBlackBoxExporter struct {
	ctrl     *gomock.Controller
	recorder *MockBlackBoxExporterMockRecorder
}

// MockBlackBoxExporterMockRecorder is the mock recorder for MockBlackBoxExporter
type MockBlackBoxExporterMockRecorder struct {
	mock *MockBlackBoxExporter
}

// NewMockBlackBoxExporter creates a new mock instance
func NewMockBlackBoxExporter(ctrl *gomock.Controller) *MockBlackBoxExporter {
	mock := &MockBlackBoxExporter{ctrl: ctrl}
	mock.recorder = &MockBlackBoxExporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBlackBoxExporter) EXPECT() *MockBlackBoxExporterMockRecorder {
	return m.recorder
}

// EnsureBlackBoxExporterResourcesExist mocks base method
func (m *MockBlackBoxExporter) EnsureBlackBoxExporterResourcesExist() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureBlackBoxExporterResourcesExist")
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureBlackBoxExporterResourcesExist indicates an expected call of EnsureBlackBoxExporterResourcesExist
func (mr *MockBlackBoxExporterMockRecorder) EnsureBlackBoxExporterResourcesExist() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureBlackBoxExporterResourcesExist", reflect.TypeOf((*MockBlackBoxExporter)(nil).EnsureBlackBoxExporterResourcesExist))
}

// EnsureBlackBoxExporterResourcesAbsent mocks base method
func (m *MockBlackBoxExporter) EnsureBlackBoxExporterResourcesAbsent() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureBlackBoxExporterResourcesAbsent")
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureBlackBoxExporterResourcesAbsent indicates an expected call of EnsureBlackBoxExporterResourcesAbsent
func (mr *MockBlackBoxExporterMockRecorder) EnsureBlackBoxExporterResourcesAbsent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureBlackBoxExporterResourcesAbsent", reflect.TypeOf((*MockBlackBoxExporter)(nil).EnsureBlackBoxExporterResourcesAbsent))
}

// ShouldDeleteBlackBoxExporterResources mocks base method
func (m *MockBlackBoxExporter) ShouldDeleteBlackBoxExporterResources() (blackboxexporter.ShouldDeleteBlackBoxExporter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShouldDeleteBlackBoxExporterResources")
	ret0, _ := ret[0].(blackboxexporter.ShouldDeleteBlackBoxExporter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShouldDeleteBlackBoxExporterResources indicates an expected call of ShouldDeleteBlackBoxExporterResources
func (mr *MockBlackBoxExporterMockRecorder) ShouldDeleteBlackBoxExporterResources() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShouldDeleteBlackBoxExporterResources", reflect.TypeOf((*MockBlackBoxExporter)(nil).ShouldDeleteBlackBoxExporterResources))
}

// GetBlackBoxExporterNamespace mocks base method
func (m *MockBlackBoxExporter) GetBlackBoxExporterNamespace() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlackBoxExporterNamespace")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBlackBoxExporterNamespace indicates an expected call of GetBlackBoxExporterNamespace
func (mr *MockBlackBoxExporterMockRecorder) GetBlackBoxExporterNamespace() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlackBoxExporterNamespace", reflect.TypeOf((*MockBlackBoxExporter)(nil).GetBlackBoxExporterNamespace))
}
